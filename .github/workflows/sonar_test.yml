name: "Test-with-sonar"
on: [push]
permissions:
      id-token: write
      contents: read
      attestations: write
jobs:
  test:
    runs-on: ubuntu-latest
    env:
      JFROG_CLI_KEY_ALIAS: ${{ vars.JFROG_CLI_KEY_ALIAS }}
      JFROG_CLI_SIGNING_KEY: ${{ secrets.JFROG_CLI_SIGNING_KEY }}
      JFROG_CLI_LOG_LEVEL: DEBUG
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      JF_URL: https://evidencetrial.jfrog.io/
    steps:
      # Checkout and install prerequisites
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"

      - name: Install jfrog cli
        id:   setup-cli
        uses: jfrog/setup-jfrog-cli@v4
        env:
          JF_URL: ${{ env.JF_URL }}
          JF_ACCESS_TOKEN: ${{ secrets.JFROG_ACCESS_TOKEN }}
        with:
         version: 2.78.8
         custom-server-id: evidence-prod

      # Install and run tests
      - name: Configure npm
        run: jf npm-config --repo-deploy barber-shop-npm-local --repo-resolve barber-shop-npm-remote

      - name: Install
        run: jf npm i --project barber-shop

      - name: Sonar scan
        uses: SonarSource/sonarqube-scan-action@v5
        continue-on-error: true  # Don't fail build on SonarCloud quality gate issues
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=setup-jfrog-cli
            -Dsonar.organization=setup-jfrog-cli_my-evidence-test-org1
            -Dsonar.qualitygate.wait=false

      - name: publish build info
        run: |
          jf rt build-publish Test-with-sonar ${{ github.run_number }}

      - name: create sonar evidence
        run: |
          jf evd create --build-name Test-with-sonar --build-number ${{ github.run_number }} --use-sonar-predicate
